from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from aiogram.filters import Command, CommandObject
from aiogram.utils.i18n import I18n, FSMI18nMiddleware
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web
import logging
from dotenv import load_dotenv
import os
import asyncio

# Load environment variables
load_dotenv()

# --- Constants ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise ValueError("TELEGRAM_TOKEN is not set in the .env file")

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
LOCALES_DIR = os.path.join(BASE_DIR, 'locales')

PROJECT_WEBSITE = os.getenv("PROJECT_WEBSITE", "https://g3zgraphene.com")  # Updated
SOCIAL_TWITTER = os.getenv("SOCIAL_TWITTER", "https://twitter.com/G3zGraph")  # Updated
SOCIAL_TELEGRAM_CHANNEL = os.getenv("SOCIAL_TELEGRAM", "https://t.me/g3zgraphene")  # Updated
WEBAPP_URL = os.getenv("WEBAPP_URL", "https://v0-solana-token-app-gilt.vercel.app/en")  # Updated

# Vercel deployment settings
APP_BASE_URL = os.getenv("VERCEL_URL")  # Vercel provides this URL automatically

# --- Language Name Mapping ---
LANG_NAME_MAP = {
    "en": "English",
    "ru": "–†—É—Å—Å–∫–∏–π"
}

# --- Bot, Dispatcher, Router ---
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# --- Multilingual Support (i18n) ---
i18n = I18n(path=LOCALES_DIR, default_locale="en", domain="graphene_bot")
user_languages = {}  # In-memory storage for user language preferences

async def get_user_locale(event_from_user):
    if event_from_user is None:
        return i18n.default_locale
    return user_languages.get(event_from_user.id, i18n.default_locale)

# Register i18n middleware
dp.update.middleware(FSMI18nMiddleware(i18n))

# --- Keyboard Definitions ---
def get_main_keyboard(locale: str):
    _ = i18n.gettext
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=_("üöÄ GrapheneApp", locale=locale), web_app=WebAppInfo(url=WEBAPP_URL))],
            [KeyboardButton(text=_("‚ÑπÔ∏è –û –ü—Ä–æ–µ–∫—Ç–µ", locale=locale)), KeyboardButton(text=_("üåê –Ø–∑—ã–∫", locale=locale))],
            [KeyboardButton(text=_("üîó –°–æ—Ü. –°–µ—Ç–∏", locale=locale))],
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_about_project_keyboard(locale: str):
    _ = i18n.gettext
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=_("üìú Whitepaper", locale=locale)), KeyboardButton(text=_("üó∫Ô∏è –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞", locale=locale))],
            [KeyboardButton(text=_("üë• –ö–æ–º–∞–Ω–¥–∞", locale=locale)), KeyboardButton(text=_("üåç –ù–∞—à —Å–∞–π—Ç", locale=locale))],  # Added "–ù–∞—à —Å–∞–π—Ç" button
            [KeyboardButton(text=_("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", locale=locale))]
        ],
        resize_keyboard=True
    )

def get_socials_keyboard(locale: str):
    _ = i18n.gettext
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=_("üê¶ Twitter", locale=locale)), KeyboardButton(text=_("‚úàÔ∏è Telegram –ö–∞–Ω–∞–ª", locale=locale))],
            [KeyboardButton(text=_("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", locale=locale))]
        ],
        resize_keyboard=True
    )

def get_language_keyboard(locale: str):
    _ = i18n.gettext
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üá¨üáß English"), KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π")],
            [KeyboardButton(text=_("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", locale=locale))]
        ],
        resize_keyboard=True
    )

# --- Logging ---
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger("GrapheneBot")

# --- Bot Handlers ---
@router.message(Command(commands=['start', 'help']))
async def send_welcome(message: Message):
    user_id = message.from_user.id
    if user_id not in user_languages:
        user_tg_lang = message.from_user.language_code
        if user_tg_lang and user_tg_lang.startswith('ru'):
            user_languages[user_id] = 'ru'
        else:
            user_languages[user_id] = i18n.default_locale

    locale = await get_user_locale(message.from_user)
    _ = i18n.gettext

    welcome_text = _("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Graphene Bot!\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.", locale=locale)
    await message.reply(welcome_text, reply_markup=get_main_keyboard(locale))

@router.message(Command(commands=['language']))
async def cmd_language_command(message: Message, command: CommandObject):
    user_id = message.from_user.id
    locale = await get_user_locale(message.from_user)
    _ = i18n.gettext

    if command.args and command.args in i18n.available_locales:
        user_languages[user_id] = command.args
        new_locale = command.args
        await message.reply(
            _("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {lang_name}.", locale=new_locale).format(lang_name=LANG_NAME_MAP.get(new_locale, new_locale.upper())),
            reply_markup=get_main_keyboard(new_locale)
        )
    else:
        await message.reply(
            _("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", locale=locale),
            reply_markup=get_language_keyboard(locale)
        )

@router.message(F.web_app_data)
async def web_app_data_received(message: Message):
    locale = await get_user_locale(message.from_user)
    _ = i18n.gettext
    logger.info(f"Received WebApp data: {message.web_app_data.data}")
    await message.reply(
        _("–î–∞–Ω–Ω—ã–µ –∏–∑ WebApp –ø–æ–ª—É—á–µ–Ω—ã: {data}", locale=locale).format(data=message.web_app_data.data),
        reply_markup=get_main_keyboard(locale)
    )

# --- Navigation Handlers ---
TEXT_ABOUT_EN = "‚ÑπÔ∏è About Project"
TEXT_LANGUAGE_EN = "üåê Language"
TEXT_SOCIALS_EN = "üîó Social Media"
TEXT_WHITEPAPER_EN = "üìú Whitepaper"
TEXT_ROADMAP_EN = "üó∫Ô∏è Roadmap"
TEXT_TEAM_EN = "üë• Team"
TEXT_OUR_WEBSITE_EN = "üåç Our Website"  # New constant
TEXT_TWITTER_EN = "üê¶ Twitter"  # Added definition
TEXT_TELEGRAM_CHANNEL_EN = "‚úàÔ∏è Telegram Channel"  # Added definition
TEXT_BACK_EN = "‚¨ÖÔ∏è Back"
TEXT_LANG_EN_BUTTON = "üá¨üáß English"
TEXT_LANG_RU_BUTTON = "üá∑üá∫ –†—É—Å—Å–∫–∏–π"

@router.message()
async def handle_text_buttons(message: Message):
    user_id = message.from_user.id
    locale = user_languages.get(user_id, i18n.default_locale)
    _ = i18n.gettext

    if message.text == _(TEXT_ABOUT_EN, locale=locale):
        await message.reply(_("–†–∞–∑–¥–µ–ª '–û –ü—Ä–æ–µ–∫—Ç–µ'. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", locale=locale),
                            reply_markup=get_about_project_keyboard(locale))
    elif message.text == _(TEXT_WHITEPAPER_EN, locale=locale):
        await send_long_message(message.chat.id, bot, WHITEPAPER_CONTENT.get(locale, WHITEPAPER_CONTENT['en']))
        await message.reply(_("Whitepaper –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥:", locale=locale), reply_markup=get_about_project_keyboard(locale))
    elif message.text == _(TEXT_ROADMAP_EN, locale=locale):
        await send_long_message(message.chat.id, bot, ROADMAP_CONTENT.get(locale, ROADMAP_CONTENT['en']))
        await message.reply(_("–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥:", locale=locale), reply_markup=get_about_project_keyboard(locale))
    elif message.text == _(TEXT_TEAM_EN, locale=locale):
        await send_long_message(message.chat.id, bot, TEAM_CONTENT.get(locale, TEAM_CONTENT['en']))
        await message.reply(_("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥:", locale=locale), reply_markup=get_about_project_keyboard(locale))
    elif message.text == _(TEXT_OUR_WEBSITE_EN, locale=locale):  # Handler for "Our Website"
        await message.reply(_("–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç: {url}", locale=locale).format(url=PROJECT_WEBSITE),
                            reply_markup=get_about_project_keyboard(locale))
    elif message.text == _(TEXT_SOCIALS_EN, locale=locale):
        await message.reply(_("–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:", locale=locale),
                            reply_markup=get_socials_keyboard(locale))
    elif message.text == _(TEXT_TWITTER_EN, locale=locale):
        await message.reply(_("–ù–∞—à Twitter: {url}", locale=locale).format(url=SOCIAL_TWITTER),
                            reply_markup=get_socials_keyboard(locale))
    elif message.text == _(TEXT_TELEGRAM_CHANNEL_EN, locale=locale):
        await message.reply(_("–ù–∞—à Telegram –∫–∞–Ω–∞–ª: {url}", locale=locale).format(url=SOCIAL_TELEGRAM_CHANNEL),
                            reply_markup=get_socials_keyboard(locale))
    elif message.text == _(TEXT_LANGUAGE_EN, locale=locale):
        await message.reply(_("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", locale=locale),
                            reply_markup=get_language_keyboard(locale))
    elif message.text == TEXT_LANG_EN_BUTTON:
        user_languages[user_id] = "en"
        new_locale = "en"
        await message.reply(
            _("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {lang_name}.", locale=new_locale).format(lang_name=LANG_NAME_MAP.get(new_locale, new_locale.upper())),
            reply_markup=get_main_keyboard(new_locale)
        )
    elif message.text == TEXT_LANG_RU_BUTTON:
        user_languages[user_id] = "ru"
        new_locale = "ru"
        await message.reply(
            _("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {lang_name}.", locale=new_locale).format(lang_name=LANG_NAME_MAP.get(new_locale, new_locale.upper())),
            reply_markup=get_main_keyboard(new_locale)
        )
    elif message.text == _(TEXT_BACK_EN, locale=locale):
        await message.reply(_("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", locale=locale),
                            reply_markup=get_main_keyboard(locale))

# --- Vercel Webhook Setup ---
async def on_startup(dispatcher: Dispatcher):
    webhook_url = f"https://{APP_BASE_URL}/webhook/{TELEGRAM_TOKEN}"
    await bot.set_webhook(webhook_url)
    logger.info(f"Webhook set to: {webhook_url}")

async def on_shutdown(dispatcher: Dispatcher):
    logger.warning('Shutting down..')
    await bot.delete_webhook()
    await dispatcher.storage.close()
    await dispatcher.storage.wait_closed()
    logger.warning('Bye!')

app = web.Application()
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=f"/webhook/{TELEGRAM_TOKEN}")
setup_application(app, dp, bot=bot)

# Helper function to send long messages
async def send_long_message(chat_id: int, bot_instance: Bot, text: str, max_length: int = 4096):
    """Splits a long message into parts and sends them."""
    for i in range(0, len(text), max_length):
        await bot_instance.send_message(chat_id, text[i:i + max_length])

# --- Content Constants ---
WHITEPAPER_CONTENT = {
    "en": """White Paper for Graphene (GRAPH)
Date: April 1, 2025

Table of Contents
1. Introduction
2. Problem Statement
3. Solution
4. Token Specifications
5. Token Allocation
6. Roadmap
7. Team
8. Token Economics
9. Contracts & Security
10. Graphene Overview: History, Properties & Applications
11. Production Processes & Innovation
12. Markets & Applications
13. Investment Requirements
14. Risk & Mitigation
15. Conclusion
16. Contacts

1. Introduction
Graphene (GRAPH) is a utility token built on the Solana blockchain designed to fund the
scaling of single-layer graphene production ‚Äî a revolutionary material with exceptional
properties.

2. Problem Statement
Current graphene production costs (~$25/g), limited industrial capacity, and supply shortages
hinder innovation in electronics, energy storage, medicine, and composite materials.

3. Solution
GRAPH creates a decentralized funding mechanism and ensures sustained demand: graphene
products can only be purchased using GRAPH tokens, aligning token value with real-world
production and demand.

4. Token Specifications
‚Ä¢ Name: Graphene
‚Ä¢ Symbol: GRAPH
‚Ä¢ Blockchain: Solana (SPL Token)
‚Ä¢ Total Supply: 100,000,000,000 GRAPH

5. Token Allocation
Category Amount Percentage Vesting Schedule
Investment Funding 500,000,000 50% 6-month cliff, 24-month linear vesting
Project Development 100,000,000 10% 12 months
Team 100,000,000 10% 12-month cliff, 24-month linear vesting
Reserve 200,000,000 20% N/A
Marketing & Partnerships 100,000,000 10% N/A

6. Roadmap
Date Milestone Description
Apr 1, 2025 Project Launch PR campaign & marketing preparation
Apr 7, 2025 Team Formation Hiring key personnel
Apr 14, 2025 Token Sale Launch Public sale of GRAPH tokens
Apr 30, 2025 Initial Results Sales analysis & investor report
May 1, 2025 Production Financing Fundraising for R&D center & certification
Q3 2025 EU Production Certification & pilot line launch
Q4 2025 UAE Production Establishment of manufacturing line
Q1 2026 Singapore Production Full-scale production launch in Asia

7. Team
Name Role Expertise
Vyacheslav Korchagin CEO Founder Finance & project management
Alexander Moor Partner Intellectual property & product strategy

8. Token Economics
GRAPH aligns token value with the production and sale of high-quality graphene, ensuring
demand-driven appreciation and investor returns.

9. Contracts & Security
The GRAPH smart contract undergoes third-party audit. Real-time production, sales, and
financial reports will be publicly available on the project website.

10. Graphene Overview: History, Properties & Applications
Graphene, first isolated in 2004, is a single-atom-thick carbon lattice with unparalleled
strength, conductivity, and flexibility. Applications span electronics, supercapacitors,
composites, water filtration, biomedical devices, and construction materials.

11. Production Processes & Innovation
Our proprietary thermomechanical and ultrasonic exfoliation methods yield few-layer
graphene with minimal defects at cost-effective rates (~‚Ç¨1/g). Scalable processes include
catalytic CVD and plasma-enhanced CVD (PE-CVD) for large-area production.
Quality Control (Raman Spectroscopy)
Raman analysis confirms average layer count of 2‚Äì3 and low defectiveness (ID/IG) for
ultrasonic exfoliation, while disintegrator methods deliver higher throughput (0.5‚Äì1 kg/h)
with moderate layer count and low defects.
Method Avg. Layers ID/IG Throughput Advantage
Ultrasonic Exfoliation 2‚Äì3 Low 0.3‚Äì0.5 g/h Highest quality
Ultrasonic + Mechanical 4‚Äì6 High 0.3‚Äì0.5 g/h ‚Äî
Disintegrator >5 Low 0.5‚Äì1 kg/h Scalability

12. Markets & Applications
Graphene‚Äôs diverse applications include:
Sector Use Cases
Electronics Sensors, semiconductors
Energy Supercapacitors, batteries
Composites Automotive, aerospace
Water Treatment Filtration membranes
Healthcare Biosensors, diagnostics
Construction Fire-resistant insulation

13. Investment Requirements
‚Ç¨27M required to build two production lines (12.5 kg/h each) covering equipment,
certification, operations, staffing, and go-to-market activities.

14. Risk & Mitigation
Risk Mitigation
Regulatory delays Comprehensive compliance in each jurisdiction
Technical challenges Partnerships with leading R&D institutes
Demand volatility Product & market diversification
Competitive threats Proprietary technology & IP protection

15. Conclusion
GRAPH presents a unique opportunity to invest in a game-changing graphene production
technology. Join us to capitalize on the growth of a multi-billion-dollar market while driving
real-world innovation.

16. Contacts
‚Ä¢ Twitter: @G3zGraph
‚Ä¢ Telegram: @g3zgraphene
‚Ä¢ Website: https://g3zgraphene.com
‚Ä¢ Email: g3z.graphene@gmail.com
""",
    "ru": """White Paper –¥–ª—è Graphene (GRAPH)
–î–∞—Ç–∞: 1 –∞–ø—Ä–µ–ª—è 2025 –≥.

–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
1. –í–≤–µ–¥–µ–Ω–∏–µ
2. –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã
3. –†–µ—à–µ–Ω–∏–µ
4. –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
5. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
6. –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
7. –ö–æ–º–∞–Ω–¥–∞
8. –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ç–æ–∫–µ–Ω–∞
9. –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
10. –û–±–∑–æ—Ä –≥—Ä–∞—Ñ–µ–Ω–∞: –∏—Å—Ç–æ—Ä–∏—è, —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
11. –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏
12. –†—ã–Ω–∫–∏ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
13. –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
14. –†–∏—Å–∫–∏ –∏ –∏—Ö —Å–Ω–∏–∂–µ–Ω–∏–µ
15. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
16. –ö–æ–Ω—Ç–∞–∫—Ç—ã

1. –í–≤–µ–¥–µ–Ω–∏–µ
Graphene (GRAPH) ‚Äî —ç—Ç–æ —Å–ª—É–∂–µ–±–Ω—ã–π —Ç–æ–∫–µ–Ω, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –æ–¥–Ω–æ—Å–ª–æ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–µ–Ω–∞ ‚Äî —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–º–∏
—Å–≤–æ–π—Å—Ç–≤–∞–º–∏.

2. –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã
–¢–µ–∫—É—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≥—Ä–∞—Ñ–µ–Ω–∞ (~$25/–≥), –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –º–æ—â–Ω–æ—Å—Ç–∏ –∏ –Ω–µ—Ö–≤–∞—Ç–∫–∞ –ø–æ—Å—Ç–∞–≤–æ–∫
–ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É—é—Ç –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ, —Ö—Ä–∞–Ω–µ–Ω–∏–∏ —ç–Ω–µ—Ä–≥–∏–∏, –º–µ–¥–∏—Ü–∏–Ω–µ –∏ –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö.

3. –†–µ—à–µ–Ω–∏–µ
GRAPH —Å–æ–∑–¥–∞–µ—Ç –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É—Å—Ç–æ–π—á–∏–≤—ã–π —Å–ø—Ä–æ—Å: –≥—Ä–∞—Ñ–µ–Ω–æ–≤—ã–µ
–ø—Ä–æ–¥—É–∫—Ç—ã –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–æ–∫–µ–Ω—ã GRAPH, —á—Ç–æ —É–≤—è–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º
–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –∏ —Å–ø—Ä–æ—Å–æ–º.

4. –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: Graphene
‚Ä¢ –°–∏–º–≤–æ–ª: GRAPH
‚Ä¢ –ë–ª–æ–∫—á–µ–π–Ω: Solana (SPL Token)
‚Ä¢ –û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: 100,000,000,000 GRAPH

5. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü—Ä–æ—Ü–µ–Ω—Ç –ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å—Ç–∏–Ω–≥–∞
–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ 500,000,000 50% 6-–º–µ—Å—è—á–Ω—ã–π –∫–ª–∏—Ñ—Ñ, 24-–º–µ—Å—è—á–Ω—ã–π –ª–∏–Ω–µ–π–Ω—ã–π –≤–µ—Å—Ç–∏–Ω–≥
–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ 100,000,000 10% 12 –º–µ—Å—è—Ü–µ–≤
–ö–æ–º–∞–Ω–¥–∞ 100,000,000 10% 12-–º–µ—Å—è—á–Ω—ã–π –∫–ª–∏—Ñ—Ñ, 24-–º–µ—Å—è—á–Ω—ã–π –ª–∏–Ω–µ–π–Ω—ã–π –≤–µ—Å—Ç–∏–Ω–≥
–†–µ–∑–µ—Ä–≤ 200,000,000 20% –ù/–î
–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ 100,000,000 10% –ù/–î

6. –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
–î–∞—Ç–∞ –≠—Ç–∞–ø –û–ø–∏—Å–∞–Ω–∏–µ
1 –∞–ø—Ä 2025 –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ PR-–∫–∞–º–ø–∞–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É
7 –∞–ø—Ä 2025 –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ù–∞–µ–º –∫–ª—é—á–µ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
14 –∞–ø—Ä 2025 –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–∫–µ–Ω–æ–≤ –ü—É–±–ª–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–∫–µ–Ω–æ–≤ GRAPH
30 –∞–ø—Ä 2025 –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∏ –æ—Ç—á–µ—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
1 –º–∞—è 2025 –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –°–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –ù–ò–û–ö–†-—Ü–µ–Ω—Ç—Ä –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
3 –∫–≤. 2025 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –ï–° –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –ø–∏–ª–æ—Ç–Ω–æ–π –ª–∏–Ω–∏–∏
4 –∫–≤. 2025 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –û–ê–≠ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏
1 –∫–≤. 2026 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –°–∏–Ω–≥–∞–ø—É—Ä–µ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤ –ê–∑–∏–∏

7. –ö–æ–º–∞–Ω–¥–∞
–ò–º—è –†–æ–ª—å –≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞
–í—è—á–µ—Å–ª–∞–≤ –ö–æ—Ä—á–∞–≥–∏–Ω CEO –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –§–∏–Ω–∞–Ω—Å—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–æ–æ—Ä –ü–∞—Ä—Ç–Ω–µ—Ä –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è

8. –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ç–æ–∫–µ–Ω–∞
GRAPH —É–≤—è–∑—ã–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –∏ –ø—Ä–æ–¥–∞–∂–µ–π –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–µ–Ω–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è
—Ä–æ—Å—Ç, –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø—Ä–æ—Å–æ–º, –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.

9. –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
–°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç GRAPH –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞—É–¥–∏—Ç —Ç—Ä–µ—Ç—å–µ–π —Å—Ç–æ—Ä–æ–Ω–æ–π. –û—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ, –ø—Ä–æ–¥–∞–∂–∞—Ö –∏
—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥—É—Ç –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ –≤–µ–±-—Å–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞.

10. –û–±–∑–æ—Ä –≥—Ä–∞—Ñ–µ–Ω–∞: –∏—Å—Ç–æ—Ä–∏—è, —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
–ì—Ä–∞—Ñ–µ–Ω, –≤–ø–µ—Ä–≤—ã–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –≤ 2004 –≥–æ–¥—É, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ–¥–Ω–æ–∞—Ç–æ–º–Ω—É—é —É–≥–ª–µ—Ä–æ–¥–Ω—É—é —Ä–µ—à–µ—Ç–∫—É —Å –Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω–æ–π
–ø—Ä–æ—á–Ω–æ—Å—Ç—å—é, –ø—Ä–æ–≤–æ–¥–∏–º–æ—Å—Ç—å—é –∏ –≥–∏–±–∫–æ—Å—Ç—å—é. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É, —Å—É–ø–µ—Ä–∫–æ–Ω–¥–µ–Ω—Å–∞—Ç–æ—Ä—ã,
–∫–æ–º–ø–æ–∑–∏—Ç—ã, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –≤–æ–¥—ã, –±–∏–æ–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.

11. –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏
–ù–∞—à–∏ –∑–∞–ø–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ç–µ—Ä–º–æ–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π –∏ —É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–æ–π —ç–∫—Å—Ñ–æ–ª–∏–∞—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∞—Ç—å –º–∞–ª–æ—Å–ª–æ–π–Ω—ã–π
–≥—Ä–∞—Ñ–µ–Ω —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–µ—Ñ–µ–∫—Ç–∞–º–∏ –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º (~‚Ç¨1/–≥). –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤–∫–ª—é—á–∞—é—Ç
–∫–∞—Ç–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ CVD –∏ –ø–ª–∞–∑–º–µ–Ω–Ω–æ-—É—Å–∏–ª–µ–Ω–Ω–æ–µ CVD (PE-CVD) –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –±–æ–ª—å—à–∏—Ö –ø–ª–æ—â–∞–¥–µ–π.
–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ (—Ä–∞–º–∞–Ω–æ–≤—Å–∫–∞—è —Å–ø–µ–∫—Ç—Ä–æ—Å–∫–æ–ø–∏—è)
–†–∞–º–∞–Ω–æ–≤—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–µ–≤ 2‚Äì3 –∏ –Ω–∏–∑–∫—É—é –¥–µ—Ñ–µ–∫—Ç–Ω–æ—Å—Ç—å (ID/IG) –¥–ª—è
—É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–æ–π —ç–∫—Å—Ñ–æ–ª–∏–∞—Ü–∏–∏, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –º–µ—Ç–æ–¥—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–µ–∑–∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –±–æ–ª–µ–µ –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (0.5‚Äì1 –∫–≥/—á)
–ø—Ä–∏ —É–º–µ—Ä–µ–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–ª–æ–µ–≤ –∏ –Ω–∏–∑–∫–æ–π –¥–µ—Ñ–µ–∫—Ç–Ω–æ—Å—Ç–∏.
–ú–µ—Ç–æ–¥ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ —Å–ª–æ–µ–≤ ID/IG –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ
–£–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–∞—è —ç–∫—Å—Ñ–æ–ª–∏–∞—Ü–∏—è 2‚Äì3 –ù–∏–∑–∫–∞—è 0.3‚Äì0.5 –≥/—á –í—ã—Å–æ—á–∞–π—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
–£–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–∞—è + –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è 4‚Äì6 –í—ã—Å–æ–∫–∞—è 0.3‚Äì0.5 –≥/—á ‚Äî
–î–µ–∑–∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä >5 –ù–∏–∑–∫–∞—è 0.5‚Äì1 –∫–≥/—á –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å

12. –†—ã–Ω–∫–∏ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–µ–Ω–∞ –≤–∫–ª—é—á–∞—é—Ç:
–°–µ–∫—Ç–æ—Ä –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –î–∞—Ç—á–∏–∫–∏, –ø–æ–ª—É–ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∏
–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –°—É–ø–µ—Ä–∫–æ–Ω–¥–µ–Ω—Å–∞—Ç–æ—Ä—ã, –±–∞—Ç–∞—Ä–µ–∏
–ö–æ–º–ø–æ–∑–∏—Ç—ã –ê–≤—Ç–æ–º–æ–±–∏–ª–µ—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å
–û—á–∏—Å—Ç–∫–∞ –≤–æ–¥—ã –§–∏–ª—å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ–º–±—Ä–∞–Ω—ã
–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ë–∏–æ—Å–µ–Ω—Å–æ—Ä—ã, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –û–≥–Ω–µ—Å—Ç–æ–π–∫–∞—è –∏–∑–æ–ª—è—Ü–∏—è

13. –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
–¢—Ä–µ–±—É–µ—Ç—Å—è ‚Ç¨27 –º–ª–Ω –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–≤—É—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ª–∏–Ω–∏–π (–ø–æ 12.5 –∫–≥/—á –∫–∞–∂–¥–∞—è), –≤–∫–ª—é—á–∞—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ,
—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ –≤—ã–≤–æ–¥ –Ω–∞ —Ä—ã–Ω–æ–∫.

14. –†–∏—Å–∫–∏ –∏ –∏—Ö —Å–Ω–∏–∂–µ–Ω–∏–µ
–†–∏—Å–∫ –°–Ω–∏–∂–µ–Ω–∏–µ
–†–µ–≥—É–ª—è—Ç–æ—Ä–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –í—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –≤ –∫–∞–∂–¥–æ–π —é—Ä–∏—Å–¥–∏–∫—Ü–∏–∏
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –≤–µ–¥—É—â–∏–º–∏ –ù–ò–ò
–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å —Å–ø—Ä–æ—Å–∞ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —Ä—ã–Ω–∫–æ–≤
–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —É–≥—Ä–æ–∑—ã –ó–∞–ø–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∏ –∑–∞—â–∏—Ç–∞ –ò–°

15. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
GRAPH –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–µ–Ω–∞.
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å –≤—ã–≥–æ–¥—É –∏–∑ —Ä–æ—Å—Ç–∞ –º–Ω–æ–≥–æ–º–∏–ª–ª–∏–∞—Ä–¥–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å
—Ä–µ–∞–ª—å–Ω—ã–º –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º.

16. –ö–æ–Ω—Ç–∞–∫—Ç—ã
‚Ä¢ Twitter: @G3zGraph
‚Ä¢ Telegram: @g3zgraphene
‚Ä¢ –í–µ–±-—Å–∞–π—Ç: https://g3zgraphene.com
‚Ä¢ Email: g3z.graphene@gmail.com
"""
}

ROADMAP_CONTENT = {
    "en": """6. Roadmap
Date Milestone Description
Apr 1, 2025 Project Launch PR campaign & marketing preparation
Apr 7, 2025 Team Formation Hiring key personnel
Apr 14, 2025 Token Sale Launch Public sale of GRAPH tokens
Apr 30, 2025 Initial Results Sales analysis & investor report
May 1, 2025 Production Financing Fundraising for R&D center & certification
Q3 2025 EU Production Certification & pilot line launch
Q4 2025 UAE Production Establishment of manufacturing line
Q1 2026 Singapore Production Full-scale production launch in Asia""",
    "ru": """6. –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
–î–∞—Ç–∞ –≠—Ç–∞–ø –û–ø–∏—Å–∞–Ω–∏–µ
1 –∞–ø—Ä 2025 –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ PR-–∫–∞–º–ø–∞–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É
7 –∞–ø—Ä 2025 –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ù–∞–µ–º –∫–ª—é—á–µ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
14 –∞–ø—Ä 2025 –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–∫–µ–Ω–æ–≤ –ü—É–±–ª–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–∫–µ–Ω–æ–≤ GRAPH
30 –∞–ø—Ä 2025 –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∏ –æ—Ç—á–µ—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
1 –º–∞—è 2025 –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –°–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –ù–ò–û–ö–†-—Ü–µ–Ω—Ç—Ä –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
3 –∫–≤. 2025 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –ï–° –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –ø–∏–ª–æ—Ç–Ω–æ–π –ª–∏–Ω–∏–∏
4 –∫–≤. 2025 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –û–ê–≠ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏
1 –∫–≤. 2026 –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –°–∏–Ω–≥–∞–ø—É—Ä–µ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≤ –ê–∑–∏–∏"""
}

TEAM_CONTENT = {
    "en": """7. Team
Name Role Expertise
Vyacheslav Korchagin CEO Founder Finance & project management
Alexander Moor Partner Intellectual property & product strategy""",
    "ru": """7. –ö–æ–º–∞–Ω–¥–∞
–ò–º—è –†–æ–ª—å –≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞
–í—è—á–µ—Å–ª–∞–≤ –ö–æ—Ä—á–∞–≥–∏–Ω CEO –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –§–∏–Ω–∞–Ω—Å—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–æ–æ—Ä –ü–∞—Ä—Ç–Ω–µ—Ä –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"""
}

# --- Main execution ---
async def run_polling():
    logger.info("Starting bot in polling mode...")
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())

if __name__ == "__main__":
    if not APP_BASE_URL:
        asyncio.run(run_polling())
    else:
        logger.info("Webhook setup for Vercel. Vercel will run the aiohttp app.")
